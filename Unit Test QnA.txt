Question 1: You have a code implemented now you have to test this whether it's working correctly or not.
What are all the ways you followed to test this code?
Which option is best?

1. Code deploy and direct test from UI

2. If it is web API, Test using swagger or Postman

3. Write unit tests using one of the popular framework and cover all the possiblities - Best option

Reason: With Unit tests, we can cover multiple test inputs and make sure our code is working efficiently with all types of inputs.
It also saves a lot of time in terms 
  - Avoid multiple PR's , 
  - Avoid multiple times deployment after every fix
  - Time we save a lot
--------------------------------------------------------------------------------------------------------
Question 2: What is the reason behind when we are creating a test class in plural?
Ex: EmployeeTests instead of EmployeeTest

Answer: We are going to create multiple test cases in one class
--------------------------------------------------------------------------------------------------------
Question 3: Acronymn for AAA

Option 1: Arrange, Act and Assert - Correct Answer

Option 2: Arranged, Action and Assertion

Option 3: Arrange, Act and Assertion

Option 4: Arrange, Actual and Assert

--------------------------------------------------------------------------------------------------------
Question 4: What is the purpose of Arrange?

Answer: Initialization, declare the objects, setup
--------------------------------------------------------------------------------------------------------
Question 5: What is the purpose of Act?

Answer: Call your actual methods
--------------------------------------------------------------------------------------------------------
Question 6: What is the purpose of Assert?

Answer: To check the actual value from ACT with expected value
--------------------------------------------------------------------------------------------------------
Question 7: In Assert.AreEqual(______,______). Fill the values

Option 1: Actual value, Expected Value

Option 2: Expected value, Actual Value - Correct Answer
--------------------------------------------------------------------------------------------------------
Question 8: Can i combine all Arrange, Act in Assert?

Answer: Yes - If you don't need any input for your calling method then you write directly in assert 
        Ex: If you want to throw then use Assert.ThrowException() there you combine your ACT into Assert.
--------------------------------------------------------------------------------------------------------
Question 9: Find what is the wrong in the following code

public class EmployeeTests
{
    [TestMethod]
    public void AddEmployee_EmpObj_NoResult()
    {
	// Add your code here - AAA        
    }
}


Answer: Missed [TestClass] attribute at class level
--------------------------------------------------------------------------------------------------------
Question 10: What are the pre-requisites to start writing unit tests with any test framework?

We need all these Nuget packages to run and test the unit test files using Nunit test framework

Nuget Package(s):
1. Nunit
2. Nunit3TestAdapter( To tests using Text Explore) and 
3. Microsoft.NET.Test.Sdk
--------------------------------------------------------------------------------------------------------
Question 11: The following code is from which unit test framework

Code:

[TestClass]
public class EmployeeTests
{
    [TestMethod]
    public void AddEmployee_EmpObj_NoResult()
    {
	// Add your code here - AAA        
    }
}

Option 1: Nunit

Option 2: MsTest - Correct Answer

Option 3: XUnit
--------------------------------------------------------------------------------------------------------
Question 12: The following code is from which unit test framework

Code:

[TestFixture]
public class EmployeeTests
{
    [Test]
    public void AddEmployee_EmpObj_NoResult()
    {
	// Add your code here - AAA        
    }
}

Option 1: Nunit - Correct Answer

Option 2: MsTest 

Option 3: XUnit
--------------------------------------------------------------------------------------------------------
Question 13: The following code is from which unit test framework

Code:

public class EmployeeTests
{
    [Fact]
    public void AddEmployee_EmpObj_NoResult()
    {
	// Add your code here - AAA        
    }
}

Option 1: Nunit

Option 2: MsTest 

Option 3: XUnit - Correct Answer
--------------------------------------------------------------------------------------------------------
Question 14: In the following code, Both asserts are correct?

Framework: Nunit
Code:
bool isOdd = calc.IsOddChecker(10);

Assert.That(IsOdd, Is.EqualTo(false));
Assert.IsFalse(IsOdd);

Option 1: Assert.That Only

Option 2: Assert.IsFalse only

Option 3: Neither 1 or 2

Option 4: Both 1 and 2 - Correct Answer
--------------------------------------------------------------------------------------------------------
Question 15: How to pass multiple values to one test case to test the functionality in Nunit?
Replace ____________ with actual name
Code:

[TestFixture]
public class EmployeeTests
{
    [Test]
    [__________(10)]
    [__________(12)]
    public void IsOdd_WithSingleValue_ReturnTrue(int a)
    {
	// Add your code here - AAA        
    }
}


Option 1 : MultiInput

Option 2 : TestInputs

Option 3 : TestCase - Correct Answer

Option 4 : TestCases
--------------------------------------------------------------------------------------------------------
Question 16: Replace placeholders with correct values in the following code

Code:

[TestFixture]
public class EmployeeTests
{
    [Test]
    [__________(10, __________ = false)]
    [__________(12, __________ = true)]
    public _______ IsOdd_WithSingleValue_ReturnTrueIfOdd(int a)
    {
          // Object Initliazation
          MathCalc obj = new();

          _____ obj.IsOddChecker(a);
    }
}

Option 1 : MultiInput, ExpectedResults, bool, return

Option 2 : TestInputs, ExpectedValue, void, variable assignment

Option 3 : TestCase, ExpectedResult, bool, return - Correct Answer

Option 4 : TestCases, ExpectedResults, bool, return
--------------------------------------------------------------------------------------------------------
Question 17: What is the output of this unit test case?
input: nuthan, Murarysetty

Code:

[TestFixture]
public class EmployeeTests
{
    [Test]
    public void CombineEmployeeName_InputTwoStrings_ReturnGreeting(string fName, string lName)
    {
          // Object Initliazation
          Employee obj = new();

	 var fullName = obj.GetFullName(fName, lName);

         Assert.That(fullName, Is.EqualTo("Hello, Nuthan Murarysetty");
         Assert.That(fullName, Does.Contain("nuthan Murarysetty"));
    }
}


Option 1: Test case pass

Option 2: Test case fail - Yes because Contain is case-sensitive to fix the test case issue
Assert.That(fullName, Does.Contain("nuthan Murarysetty").IgnoreCase);

--------------------------------------------------------------------------------------------------------
Question 18: Is it possible to test the test case using Regular Expression using Nunit?

Input: Hello, Nuthan Murarysetty

[A-Z]{1} => First letter is capital
[a-z]+ => Any number of characters

Assert.That(fullName, Does.Match("Hello, [A-Z]{1}[a-z]+ [A-Z]{1}[a-z]+"));
Answer: Yes
--------------------------------------------------------------------------------------------------------
Question 19: Write a test case to test using regular expression in Nunit framework?
input: nuthan, Murarysetty
Expected Output: Hello, nuthan murarysetty

Code:

[TestFixture]
public class EmployeeTests
{
    [Test]
    public void CombineEmployeeName_InputTwoStrings_ReturnGreeting(string fName, string lName)
    {
          // Object Initliazation
          Employee obj = new();

	 var fullName = obj.GetFullName(fName, lName);

	 Assert.That(fullName, Does.Match("Hello, [a-z]+ [a-z]+"));
    }
}
--------------------------------------------------------------------------------------------------------
Question 20: 